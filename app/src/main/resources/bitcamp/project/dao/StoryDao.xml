<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitcamp.project.dao.StoryDao">

    <resultMap id="StoryMap" type="story">
        <id column="story_id" property="id"/>
        <result column="title" property="title"/>
        <result column="travel_date" property="travelDate"/>
        <result column="create_date" property="createDate"/>
        <result column="location_detail" property="locationDetail"/>
        <result column="content" property="content"/>
        <result column="share" property="share"/>

        <association property="location" javaType="location">
            <id column="location_id" property="id"/>
            <result column="first_name" property="firstName"/>
            <result column="second_name" property="secondName"/>
        </association>

        <association property="user" javaType="user">
            <id column="user_id" property="id"/>
            <result column="email" property="email"/>
            <result column="password" property="password"/>
            <result column="nickname" property="nickname"/>
            <result column="path" property="path"/>
        </association>
    </resultMap>


    <insert id="insert" parameterType="story"
            useGeneratedKeys="true" keyColumn="story_id" keyProperty="id">
        INSERT INTO story(user_id, location_id, title, travel_date, location_detail, content, share)
        VALUES (#{user.id}, #{location.id}, #{title}, #{travelDate}, #{locationDetail}, #{content}, #{share})
    </insert>


    <select id="findAll" resultMap="StoryMap">
        SELECT
            s.story_id,
            s.title,
            s.travel_date,
            s.create_date,
            s.location_detail,
            s.content,
            s.share,
            u.user_id,
            u.email,
            u.password,
            u.nickname,
            u.path,
            l.location_id,
            l.first_name,
            l.second_name
        FROM
            story s inner join user u on s.user_id=u.user_id
            inner join location l on s.location_id=l.location_id
        ORDER BY
            s.story_id desc
    </select>


    <select id="findAllByUserId" resultMap="StoryMap" parameterType="int">
        SELECT
            s.story_id,
            s.title,
            s.travel_date,
            s.create_date,
            s.location_detail,
            s.content,
            s.share,
            u.user_id,
            u.email,
            u.password,
            u.nickname,
            u.path,
            l.location_id,
            l.first_name,
            l.second_name
        FROM
            story s inner join user u on s.user_id=u.user_id
            inner join location l on s.location_id=l.location_id
        WHERE
            u.user_id=#{userId}
        ORDER BY
            s.story_id desc
    </select>


    <select id="findAllByMyLike" resultMap="StoryMap" parameterType="int">
        SELECT
            s.story_id,
            s.title,
            s.travel_date,
            s.create_date,
            s.location_detail,
            s.content,
            s.share,
            u.user_id,
            u.email,
            u.password,
            u.nickname,
            u.path,
            l.location_id,
            l.first_name,
            l.second_name
        FROM
            story s inner join user u on s.user_id=u.user_id
            inner join location l on s.location_id=l.location_id
            inner join story_like k on k.story_id=s.story_id
        WHERE
            k.user_id=#{userId}
        ORDER BY
            k.like_date desc
    </select>


    <select id="findByStoryId" resultMap="StoryMap" parameterType="int">
        SELECT
            s.story_id,
            s.title,
            s.travel_date,
            s.create_date,
            s.location_detail,
            s.content,
            s.share,
            u.user_id,
            u.email,
            u.password,
            u.nickname,
            u.path,
            l.location_id,
            l.first_name,
            l.second_name
        FROM
            story s inner join user u on s.user_id=u.user_id
            inner join location l on s.location_id=l.location_id
        WHERE
            story_id = #{id}
    </select>


    <update id="update" parameterType="story">
        update story set
            title=#{title},
            travel_date=#{travelDate},
            location_detail=#{locationDetail},
            content=#{content},
            share=#{share},
            location_id=#{location.id}
        where story_id=#{id}
    </update>


    <delete id="delete" parameterType="int">
        DELETE FROM story WHERE story_id=#{id}
    </delete>


</mapper>
